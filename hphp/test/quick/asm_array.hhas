#
# Test arrays for hhbc asm.
#

.main {
  NullUninit
  NullUninit
  NullUninit
  String "main"
  FPushFunc 0
  FCall <> 0 1 "" - "" "" # allow the JIT why not
  PopC

  Int 1
  RetC
}

.adata my_array = """a:2:{s:3:"foo";s:3:"bar";s:3:"baz";s:4:"blah";}""";

.class ClassWithArray {
  .property [static public] arr =
            """a:4:{i:0;i:1;i:1;i:2;i:2;i:3;i:3;i:4;}""";
}

.function ArrayMember() {
  .numclsrefslots 1;
  NullUninit
  NullUninit
  NullUninit
    String "arr"
    String "ClassWithArray"
    ClsRefGetC 0
    CGetS 0
  FPushFuncD 1 "var_dump"
  FCall <> 1 1 "" - "" ""
  PopC

  String "ClassWithArray"
  SetL $x
  PopC

  NullUninit
  NullUninit
  NullUninit
    String "arr"
    Int 2
    CGetL $x
    ClsRefGetC 0
    BaseSC 1 0 Warn
    QueryM 2 CGet EC:0
  FPushFuncD 1 "var_dump"
  FCall <> 1 1 "" - "" ""
  PopC

  True
  RetC
}

.function main() {
  NullUninit
  NullUninit
  NullUninit
  FPushFuncD 0 "ArrayMember"
  FCall <> 0 1 "" - "" ""
  PopC

  Array @my_array
  SetL $arr
  PopC

  BaseL $arr Warn
  QueryM 0 CGet ET:"foo"
  String "\n"
  Concat
  Print
  PopC

  String "one"
  BaseL $arr Define
  SetM 0 EI:1
  PopC

  BaseL $arr Warn
  QueryM 0 CGet EI:1
  String "\n"
  Concat
  Print
  PopC

  String "baz"
  SetL $key
  PopC
  BaseL $arr Unset
  UnsetM 0 EL:$key

  # Test that it's unset
  CGetL $arr
  BaseC 0 Warn
  QueryM 1 Isset EL:$key
  JmpZ unset_label

  String "This should be impossible...\n"
  Print
  PopC

  Null
  RetC

unset_label:  String "win\n"
              Print
              PopC

              NullUninit
              NullUninit
              NullUninit
              CGetL $arr
              FPushFuncD 1 "var_dump"
              FCall <> 1 1 "" - "" ""
              PopC

              NullUninit
              NullUninit
              NullUninit
              Int 1
              String "b"
              NewPackedArray 2
              FPushFuncD 1 "var_dump"
              FCall <> 1 1 "" - "" ""
              PopC

              Null
              RetC
}
